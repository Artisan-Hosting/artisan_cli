name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Rename and copy binary
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/artisan_cli${{ matrix.ext }} dist/artisan_cli-${{ matrix.target }}${{ matrix.ext }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

   macos-aarch64:
    name: Build macOS aarch64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
      - name: Build aarch64
        run: cargo build --release --target aarch64-apple-darwin
      - uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64
          path: target/aarch64-apple-darwin/release/artisan_cli

  macos-x86_64:
    name: Build macOS x86_64
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
      - name: Build x86_64
        run: cargo build --release --target x86_64-apple-darwin
      - uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64
          path: target/x86_64-apple-darwin/release/artisan_cli

  macos-universal:
    name: Combine macOS Universal Binary
    runs-on: macos-latest
    needs: [macos-aarch64, macos-x86_64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: macos-aarch64
          path: bin/aarch64
      - uses: actions/download-artifact@v4
        with:
          name: macos-x86_64
          path: bin/x86_64

      - name: Create Universal Binary
        run: |
          mkdir -p dist
          lipo -create \
            bin/aarch64/artisan_cli \
            bin/x86_64/artisan_cli \
            -output dist/artisan_cli-macos-universal
          tar -czf artisan_cli-macos-universal.tar.gz -C dist artisan_cli-macos-universal

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: artisan_cli-macos-universal.tar.gz


  package:
    name: Package All Binaries
    runs-on: ubuntu-latest
    needs: [build, macos-universal]

    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: release_binaries

      - name: Create final zip
        run: |
          cd release_binaries
          zip ../artisan_cli-all-platforms.zip *

      - name: Upload Final Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: artisan_cli-all-platforms.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 