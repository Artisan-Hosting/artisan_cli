name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Rename and copy binary
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/artisan_cli${{ matrix.ext }} dist/artisan_cli-${{ matrix.target }}${{ matrix.ext }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  macos-universal:
    name: Build macOS Universal Binary
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust for aarch64 and x86_64
        run: |
          rustup install stable-aarch64-apple-darwin
          rustup install stable-x86_64-apple-darwin
          rustup target add aarch64-apple-darwin --toolchain stable-aarch64-apple-darwin
          rustup target add x86_64-apple-darwin --toolchain stable-x86_64-apple-darwin

      - name: Build for aarch64
        run: |
          rustup run stable-aarch64-apple-darwin cargo build --release --target aarch64-apple-darwin

      - name: Build for x86_64
        run: |
          rustup run stable-x86_64-apple-darwin cargo build --release --target x86_64-apple-darwin

      - name: Create Universal 2 Binary
        run: |
          mkdir -p dist
          lipo -create \
            target/aarch64-apple-darwin/release/artisan_cli \
            target/x86_64-apple-darwin/release/artisan_cli \
            -output dist/artisan_cli-macos-universal

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*


  package:
    name: Package All Binaries
    runs-on: ubuntu-latest
    needs: [build, macos-universal]

    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: release_binaries

      - name: Create final zip
        run: |
          cd release_binaries
          zip ../artisan_cli-all-platforms.zip *

      - name: Upload Final Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: artisan_cli-all-platforms.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 